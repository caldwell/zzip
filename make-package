#!/bin/sh -x

name=zzip
fullname="zzip"
version=`perl -ne 'print $1 if /#define version "([^"]+)"/' zzip.c`
versionmajor=`echo ${version} | perl -pe 's/^(\d+)\.(\d+)\..*/$1/'`
versionminor=`echo ${version} | perl -pe 's/^(\d+)\.(\d+)\..*/$2/'`
description="Install ${fullname} ${version} as a command-line app. \
 Compress files, add arbitrary meta-data.\
 zzip compresses/excrypts files and lets the user add arbitrary\
 meta-data in the form of text headers at the top of the file. It is\
 perfect for binary ROM firmware files."

tempparentfull=./install-dir

make install DESTDIR=`pwd`/install-dir prefix=

packagedir=`pwd`/${name}-${version}.pkg

rm -rf ${packagedir}
mkdir -p ${packagedir}/Contents/Resources/English.lproj
echo -n 'pmkrpkg1' > ${packagedir}/Contents/PkgInfo

# Create ReadMe and License files
#cp ${srcdir}/COPYING ${packagedir}/Contents/Resources/License.txt
#cp ${srcdir}/mac/README ${packagedir}/Contents/Resources/ReadMe.txt

#new package format:
cat <<EOF > ${packagedir}/Contents/Info.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleGetInfoString</key>
	<string>${name} ${version}</string>
	<key>CFBundleIdentifier</key>
	<string>${identifier}</string>
	<key>CFBundleName</key>
	<string>${name}</string>
	<key>CFBundleShortVersionString</key>
	<string>${version}</string>
	<key>IFMajorVersion</key>
	<integer>${versionmajor}</integer>
	<key>IFMinorVersion</key>
	<integer>${versionminor}</integer>
	<key>IFPkgFlagAllowBackRev</key>
	<false/>
	<key>IFPkgFlagAuthorizationAction</key>
	<string>RootAuthorization</string>
	<key>IFPkgFlagDefaultLocation</key>
	<string>/usr</string>
	<key>IFPkgFlagInstallFat</key>
	<false/>
	<key>IFPkgFlagIsRequired</key>
	<false/>
	<key>IFPkgFlagRelocatable</key>
	<false/>
	<key>IFPkgFlagRestartAction</key>
	<string>NoRestart</string>
	<key>IFPkgFlagRootVolumeOnly</key>
	<true/>
	<key>IFPkgFlagUpdateInstalledLanguages</key>
	<false/>
	<key>IFPkgFormatVersion</key>
	<real>0.10000000149011612</real>
</dict>
</plist>
EOF


### Set the install directory to install files as root...
### Not sure if this is a good diea
# echo "Setting owner to root"
# chown -Rh 0 ${tempparentfull}

echo "Creating pax file"
(cd ${tempparentfull}; pax -w -f ${packagedir}/Contents/Archive.pax .)
echo "Compressing pax file"
gzip ${packagedir}/Contents/Archive.pax
rm -f ${packagedir}/Contents/Archive.pax

echo "Creating bom file"
mkbom ${tempparentfull} ${packagedir}/Contents/Archive.bom

# Create old school stuff:
cat <<EOF > ${packagedir}/Contents/Resources/Description.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IFPkgDescriptionDeleteWarning</key>
	<string>${deletewarning}</string>
	<key>IFPkgDescriptionDescription</key>
	<string>${description}</string>
	<key>IFPkgDescriptionTitle</key>
	<string>${fullname}</string>
	<key>IFPkgDescriptionVersion</key>
	<string>${version}</string>
</dict>
</plist>
EOF

infofile=${packagedir}/Contents/Resources/English.lproj/${name}-${version}.info

echo "Title ${fullname}" > ${infofile}
echo "Version ${version}" >> ${infofile}
echo "Description ${description}" >> ${infofile}
echo 'DefaultLocation /usr' >> ${infofile}
echo 'DeleteWarning' >> ${infofile}
echo 'NeedsAuthorization YES' >> ${infofile}
echo 'Required NO' >> ${infofile}
echo 'Relocatable NO' >> ${infofile}
echo 'RequiresReboot NO' >> ${infofile}
echo 'UseUserMask NO' >> ${infofile}
echo 'OverwritePermissions NO' >> ${infofile}
echo 'InstallFat NO' >> ${infofile}

(cd ${packagedir}/Contents/Resources/; ln -s ../Archive.pax.gz ${name}-${version}.pax.gz)
(cd ${packagedir}/Contents/Resources/; ln -s ../Archive.bom ${name}-${version}.bom)

echo "Generating sizes file"
sizesfile=${packagedir}/Contents/Resources/English.lproj/${name}-${version}.sizes

numFiles=`du -a ${tempparent} | wc -l`
installedSize=`du -s ${tempparent} | cut -f1`
compressedSize=`du -s ${packagedir} | cut -f1`

echo "NumFiles ${numFiles}" > ${sizesfile}
echo "InstalledSize ${installedSize}" >> ${sizesfile}
echo "CompressedSize ${compressedSize}" >> ${sizesfile}
cat ${sizesfile}
